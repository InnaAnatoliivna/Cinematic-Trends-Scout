{"version":3,"file":"static/js/650.33062e31.chunk.js","mappings":"uUAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAiB,mCAAG,sGACND,EAAAA,EAAAA,IAAA,sCAAyCD,IADnC,uBACrBG,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAOC,GAAP,yFACJJ,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAgDK,IAD5C,uBACnBF,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAMfG,EAAgB,mCAAG,WAAOC,GAAP,yFACLN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,oBAAuCP,IADlC,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAMhBK,EAAe,mCAAG,WAAOD,GAAP,yFACJN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CP,IAD3C,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAMfM,EAAe,mCAAG,WAAOF,GAAP,yFACJN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA+CP,IAD3C,uBACnBG,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKfO,EAAiB,SAACC,GAC3B,MAAM,sCAAN,OAA6CA,EAChD,C,0CC9BD,IANe,WACX,OACI,uCAEP,C,+ICWD,EAfoB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACI,wBACKA,EAAeC,KAAI,SAAAC,GAChB,OACI,2BACI,qCAAaA,EAAOC,WACpB,6BAAKD,EAAOE,QAAZ,SAFKF,EAAOG,GAKvB,KAGZ,E,SCwBD,EAjCgB,WACZ,IAAQV,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAyCY,EAAAA,EAAAA,UAAS,MAAlD,eAAOP,EAAP,KAAuBQ,EAAvB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAiBC,EAAjB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,2FACnBF,GAAY,GACZF,EAAS,IAFU,mBAIIb,EAAAA,EAAAA,IAAgBF,GAJpB,QAITJ,EAJS,QAKNwB,QAAQC,OAAS,GAAGR,EAAejB,EAAKwB,SALlC,gDAQfL,EAAS,KAAMO,SACfC,QAAQC,IAAIV,GATG,yBAWfG,GAAY,GAXG,4EAAH,qDAcpBE,GACH,GAAE,CAACL,EAAOd,KAGP,gCACKgB,IAAY,SAACS,EAAA,EAAD,IACZpB,GACG,SAAC,EAAD,CAAaA,eAAgBA,KAC1B,qEAElB,C","sources":["API/api-service.js","components/Loader/Loader.jsx","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst key = 'b8038f0a7a9d99e63733d790c6805a39';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return data;\n}\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nexport const getSearchMovies = async (query) => {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n    return data;\n}\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\nexport const getMoviesDetails = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}`);\n    return data;\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n    return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n\n","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div>Loading...</div>\n    )\n}\n\nexport default Loader","import React from 'react'\n\nconst ReviewsList = ({ reviewsResults }) => {\n    return (\n        <ul>\n            {reviewsResults.map(review => {\n                return (\n                    <li key={review.id}>\n                        <h4>Author: {review.author}</h4>\n                        <p>\"{review.content}\"</p>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default ReviewsList","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from 'API/api-service';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviewsResults, setCastResults] = useState(null);\n    const [Error, setError] = useState('');\n    const [isLoader, setIsLoader] = useState(false);\n\n    useEffect(() => {\n        const fetchMovieCast = async () => {\n            setIsLoader(true);\n            setError('');\n            try {\n                const data = await getMovieReviews(movieId);\n                if (data.results.length > 0) setCastResults(data.results);\n            }\n            catch (error) {\n                setError(error.message);\n                console.log(Error)\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieCast()\n    }, [Error, movieId])\n\n    return (\n        <>\n            {isLoader && <Loader />}\n            {reviewsResults ?\n                <ReviewsList reviewsResults={reviewsResults} />\n                : (<p>We dont have any reviews for this movie</p>)}\n        </>)\n}\n\nexport default Reviews;"],"names":["key","axios","getTrendingMovies","data","getSearchMovies","query","getMoviesDetails","movieId","getMovieCredits","getMovieReviews","getPosterMovie","pathToPoster","reviewsResults","map","review","author","content","id","useParams","useState","setCastResults","Error","setError","isLoader","setIsLoader","useEffect","fetchMovieCast","results","length","message","console","log","Loader"],"sourceRoot":""}