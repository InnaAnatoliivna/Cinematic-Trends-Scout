{"version":3,"file":"static/js/876.35a4ec2d.chunk.js","mappings":"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","sources":["API/api-service.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/SearchMovies/SearchMovies.jsx","components/SearchResultsList/SearchResultsList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst key = 'b8038f0a7a9d99e63733d790c6805a39';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return data;\n}\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nexport const getSearchMovies = async (query) => {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n    return data;\n}\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\nexport const getMoviesDetails = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}`);\n    return data;\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n    return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n\n","import React from 'react'\n\nconst Button = ({ children, handleClick }) => {\n    return (\n        <button type='button' onClick={handleClick}>{children}</button>\n    )\n}\n\nexport default Button;","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div>Loading...</div>\n    )\n}\n\nexport default Loader","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst SearchMovies = ({ onSearchSubmit }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        setSearchQuery(e.currentTarget.value.toLowerCase().trim())\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (searchQuery === '') {\n            alert('Enter a search query!');\n            return\n        }\n        onSearchSubmit(searchQuery);\n        navigate(`/movies?query=${searchQuery}`);\n        setSearchQuery('');\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    className=\"Search-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    onChange={handleChange}\n                    value={searchQuery} />\n                <button type='submit'>Search</button>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchMovies;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SearchResultsList = ({ arrayResults }) => {\n\n    return (\n        <ul>\n            {arrayResults.map(movie => {\n                return (\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default SearchResultsList","import { useNavigate } from \"react-router-dom\";\nimport { getSearchMovies } from 'API/api-service';\nimport { useState, useEffect } from 'react';\nimport Button from 'components/Button/Button';\nimport SearchMovies from \"components/SearchMovies/SearchMovies\";\nimport Loader from 'components/Loader/Loader';\nimport SearchResultsList from \"components/SearchResultsList/SearchResultsList\";\n\n\nconst Movies = () => {\n    const [isLoader, setIsLoader] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchResults, setSearchResults] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchSearchMovies = async () => {\n            setIsLoader(true);\n            try {\n                const data = await getSearchMovies(searchQuery);\n                setSearchResults(data.results);\n                // setSearchResults(data.map(({ id, title }) => ({ id, title })));\n            }\n            catch (error) {\n                console.error(error.message);\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchSearchMovies(searchQuery)\n    }, [searchQuery]);\n\n    const onSearchSubmit = query => setSearchQuery(query);\n\n    return (\n        <div>\n            <Button handleClick={() => { navigate(-1) }}>Go back</Button>\n            {isLoader && <Loader />}\n            <SearchMovies onSearchSubmit={onSearchSubmit} />\n            {searchResults && <SearchResultsList arrayResults={searchResults} />}\n        </div>\n    )\n}\n\nexport default Movies;"],"names":["key","axios","getTrendingMovies","data","getSearchMovies","query","getMoviesDetails","movieId","getMovieCredits","getMovieReviews","getPosterMovie","pathToPoster","children","handleClick","type","onClick","onSearchSubmit","useState","searchQuery","setSearchQuery","navigate","useNavigate","onSubmit","e","preventDefault","alert","className","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","trim","arrayResults","map","movie","to","id","title","isLoader","setIsLoader","searchResults","setSearchResults","useEffect","fetchSearchMovies","results","console","error","message","Button","Loader"],"sourceRoot":""}