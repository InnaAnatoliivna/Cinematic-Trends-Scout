{"version":3,"file":"static/js/7.20ea722e.chunk.js","mappings":"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","sources":["API/api-service.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst key = 'b8038f0a7a9d99e63733d790c6805a39';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/day?api_key=${key}`);\n    return data;\n}\n\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\nexport const getSearchMovies = async (query) => {\n    const { data } = await axios.get(`/search/movie?api_key=${key}&query=${query}`);\n    return data;\n}\n\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\nexport const getMoviesDetails = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${key}`);\n    return data;\n}\n\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${key}`);\n    return data;\n}\n\nexport const getPosterMovie = (pathToPoster) => {\n    return `https://image.tmdb.org/t/p/original${pathToPoster}`\n}\n\n\n\n","import React from 'react'\n\nconst Button = ({ children, handleClick }) => {\n    return (\n        <button type='button' onClick={handleClick}>{children}</button>\n    )\n}\n\nexport default Button;","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div>Loading...</div>\n    )\n}\n\nexport default Loader","import React from 'react';\nimport { getPosterMovie } from 'API/api-service';\nimport defaultImage from 'defaultImageActor.png'\n\nconst MovieDetailsCard = ({ movie }) => {\n\n    const getUserScope = movie => Math.floor((movie.vote_average / 10) * 100);\n    const getYear = movie => movie.release_date.split('-')[0];\n    const getGenres = movie => movie.genres.map(genre => <span key={genre.id}>{genre.name}</span>);\n\n    const posterPath = movie.poster_path ? getPosterMovie(movie.poster_path) : defaultImage;\n\n    return (\n        <div>\n            <img\n                src={getPosterMovie(posterPath)}\n                alt={movie.original_title}\n                width={250}\n            />\n            <h2>{movie.title} ({getYear(movie)})</h2>\n            <p>User score: {getUserScope(movie)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h4>Genres</h4>\n            <p>{getGenres(movie)}</p>\n        </div>\n    )\n}\n\nexport default MovieDetailsCard;","import React, { useEffect, useState } from 'react'\nimport MovieDetailsCard from 'components/MovieDetailsCard/MovieDetailsCard';\nimport { Link, Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport Loader from 'components/Loader/Loader';\nimport { getMoviesDetails } from 'API/api-service';\nimport Button from 'components/Button/Button';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [isLoader, setIsLoader] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            setIsLoader(true);\n            try {\n                const data = await getMoviesDetails(movieId);\n                setSelectedMovie(data);\n            }\n            catch (error) {\n                console.error(error.message);\n            } finally {\n                setIsLoader(false);\n            }\n        }\n        fetchMovieDetails()\n    }, [movieId])\n\n    return (\n        <>\n            {isLoader && <Loader />}\n            <Button handleClick={() => { navigate(-1) }}>Go back</Button>\n            {selectedMovie && <MovieDetailsCard movie={selectedMovie} />}\n            <div>\n                <p>Additional information</p>\n                <Link to='cast'>Cast</Link>\n                <Link to='reviews'>Reviews</Link>\n                <Outlet />\n            </div>\n        </>\n    )\n}\n\nexport default MovieDetails"],"names":["key","axios","getTrendingMovies","data","getSearchMovies","query","getMoviesDetails","movieId","getMovieCredits","getMovieReviews","getPosterMovie","pathToPoster","children","handleClick","type","onClick","movie","posterPath","poster_path","defaultImage","src","alt","original_title","width","title","release_date","split","getYear","Math","floor","vote_average","getUserScope","overview","genres","map","genre","name","id","getGenres","useParams","useState","selectedMovie","setSelectedMovie","isLoader","setIsLoader","navigate","useNavigate","useEffect","fetchMovieDetails","console","error","message","Loader","Button","to"],"sourceRoot":""}